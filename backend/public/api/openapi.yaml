openapi: '3.0.1'
info:
  title: Internet Quântica
  description: >
    O projeto “Internet Quântica” tem como propósito ser uma fonte de informação geral sobre a internet quântica, seus estudos e possíveis usos.
  version: 1.0.0

servers:
  - url: http://{host}:{porta}/api
    variables:
      host: 
        default: localhost
      porta: 
        default: '8000'

paths:
  /signup:
    post:
      summary: "Cria um novo usuário"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: "Nome do usuário"
                  maxLength: 255
                email:
                  type: string
                  description: "Email do usuário"
                  pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                senha:
                  type: string
                  description: "Senha do usuário"
                  minLength: 6
              required:
                - nome
                - email
                - senha
      responses:
        '201':
          description: "Usuário criado"
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                    description: "URI do novo usuário"
        '400':
          description: "Requisição inválida"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: "Mensagem de erro"


  /login:
    post:
      summary: Realiza o login de um usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email do usuário
                senha:
                  type: string
                  description: Senha do usuário
              required:
                - email
                - senha
      responses:
        200:
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensagem de sucesso
                  usuario:
                    type: object
                    properties:
                      id:
                        type: integer
                      nome:
                        type: string
                      email:
                        type: string
        401:
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensagem de erro
                    
  /logout:
    post:
      summary: Desloga o usuário em questão
      security:
        - bearer: []
      responses:
        200:
          description: Usuário deslogado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indica se o logout foi bem-sucedido
                  msg:
                    type: string
                    description: Mensagem de confirmação
        401:
          description: Token inválido ou não fornecido
        500:
          description: Erro interno no servidor
  /id:
    get:
      summary: Retorna o ID do usuário logado
      security:
        - bearer: []
      responses:
        200:
          description: Usuário encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                    description: o ID do Usuario logado
        404:
          description: Usuario não encontrado

  /usuarios:
    get:
      summary: Lista todos os usuários
      responses:
        200:
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /usuarios/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Acessa um usuário específico
      security:
        - bearer: []
      responses:
        200:
          description: Detalhes do usuário
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nome:
                    type: string
                  email:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        404:
          description: Usuário não encontrado

  /comments:
    get:
      summary: Lista todos os comentários
      security:
        - bearer: []
      responses:
        200:
          description: Lista de comentários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
    post:
      summary: Cria um novo comentário
      security:
        - bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: Conteúdo do comentário
                usu_id:
                  type: integer
                  description: ID do usuário que está criando o comentário
                usu_nome:
                  type: string
                  description: nome do usuário que criou o comentário

              required:
                - content
                - usu_id
                - usu_nome
      responses:
        201:
          description: Comentário criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                    description: URI do novo comentário
        400:
          description: Requisição inválida
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensagem de erro detalhada
  /comments/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Acessa um comentário específico
      security:
        - bearer: []
      responses:
        200:
          description: Detalhes do comentário
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  content:
                    type: string
                  usu_id:
                    type: integer
        404:
          description: Comentário não encontrado
    put:
      summary: Atualiza um comentário específico
      security:
        - bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: Conteúdo do comentário
      responses:
        200:
          description: Comentário atualizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensagem de sucesso
        404:
          description: Comentário não encontrado
        400:
          description: Requisição inválida 
    delete:
      summary: Exclui um comentário específico
      description: Exclui um comentário existente
      security:
        - bearer: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID do comentário a ser excluído
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: Comentário excluído com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Comentário excluído com sucesso.
        403:
          description: Usuário não autorizado a excluir o comentário
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Você não tem permissão para excluir este comentário.
        404:
          description: Comentário não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Nenhum comentário encontrado com este ID.

components:
  securitySchemes:
    bearer: 
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Comment:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        usu_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time